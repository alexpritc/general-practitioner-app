/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

// Package and imports.
package guis;

import guis.doctorsystem.doctorhome;
import guis.adminsystem.adminhome;
import guis.secretarysystem.secretaryhome;
import guis.patientsystem.patienthome;
import other.systemdatabase;
import accounts.*;
import javax.swing.JOptionPane;


/**
 *
 * @author Alex Pritchard
 */
public class login extends javax.swing.JFrame {

    /**
     * Creates new form login
     */
    public login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        lblSignUp = new javax.swing.JLabel();
        btnLogIn = new javax.swing.JButton();
        btnCreateAccount = new javax.swing.JButton();
        txtID = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(564, 470));
        setResizable(false);
        setSize(new java.awt.Dimension(564, 470));

        lblTitle.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 36)); // NOI18N
        lblTitle.setText("Returning user");

        lblID.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 24)); // NOI18N
        lblID.setText("ID");

        lblPassword.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 24)); // NOI18N
        lblPassword.setText("Password");

        lblSignUp.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 21)); // NOI18N
        lblSignUp.setText("Or sign up");

        btnLogIn.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 21)); // NOI18N
        btnLogIn.setText("Log in");
        btnLogIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogInActionPerformed(evt);
            }
        });

        btnCreateAccount.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 21)); // NOI18N
        btnCreateAccount.setText("Create account");
        btnCreateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateAccountActionPerformed(evt);
            }
        });

        txtID.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 21)); // NOI18N

        txtPassword.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 21)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitle)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblPassword)
                                    .addComponent(lblID))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                                    .addComponent(txtID, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                                    .addComponent(btnLogIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblSignUp)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCreateAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLogIn)
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblSignUp, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCreateAccount)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Takes the user to the create account option.
    private void btnCreateAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateAccountActionPerformed
        // TODO add your handling code here:       
        this.setVisible(false);
        new createaccount().setVisible(true);
    }//GEN-LAST:event_btnCreateAccountActionPerformed

    // Checks the login details against the ones saved in the system,
    // and takes the user to the correct home page depending on the
    // type of ID.
    private void btnLogInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogInActionPerformed
        // TODO add your handling code here:
        
        String id = txtID.getText();
        String password = txtPassword.getText();
        
        // Patients log in.
        if (id.startsWith("P")){
        for (patient i : systemdatabase.patients){

            if (id.equals(i.getId())){
                if (password.equals(i.getPassword())){

                    patienthome.patient = i;
                    this.setVisible(false);
                    new patienthome().setVisible(true); 
                    return;
                }
                else{
                    JOptionPane.showMessageDialog(null, 
                            "UserID or Password was incorrect.", "" + "", 
                            JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }
        }
        
        JOptionPane.showMessageDialog(null, "UserID or Password was incorrect.", 
                "" + "", JOptionPane.INFORMATION_MESSAGE);
        }
        // Administrators log in.
        else if (id.startsWith("A")){
        for (administrator i : systemdatabase.administrators){
            if (id.equals(i.getId())){
                if (password.equals(i.getPassword())){
                    
                    adminhome.admin = i;
                    this.setVisible(false);
                    new adminhome().setVisible(true); 
                    return;
                }
                else{
                    JOptionPane.showMessageDialog(null, 
                            "UserID or Password was incorrect.", "" + "", 
                            JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }
        }
        
        JOptionPane.showMessageDialog(null, "UserID or Password was incorrect.", 
                "" + "", JOptionPane.INFORMATION_MESSAGE);
        }
        // Doctors log in.
         else if (id.startsWith("D")){
        for (doctor i : systemdatabase.doctors){
            if (id.equals(i.getId())){
                if (password.equals(i.getPassword())){
                    doctorhome.dr = i;
                    this.setVisible(false);
                    new doctorhome().setVisible(true); 
                    return;
                }
                else{
                    JOptionPane.showMessageDialog(null, 
                            "UserID or Password was incorrect.", "" + "", 
                            JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }
        }
        
        JOptionPane.showMessageDialog(null, "UserID or Password was incorrect.", 
                "" + "", JOptionPane.INFORMATION_MESSAGE);
        }
         // Secretaries log in.
         else if (id.startsWith("S")){
        for (secretary i : systemdatabase.secretaries){
            if (id.equals(i.getId())){
                if (password.equals(i.getPassword())){
                    secretaryhome.sec = i;
                    this.setVisible(false);
                    new secretaryhome().setVisible(true); 
                    return;
                }
                else{
                    JOptionPane.showMessageDialog(null, 
                            "UserID or Password was incorrect.", "" + "", 
                            JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }
        }
        
        JOptionPane.showMessageDialog(null, "UserID or Password was incorrect.", 
                "" + "", JOptionPane.INFORMATION_MESSAGE);
        }
        

    }//GEN-LAST:event_btnLogInActionPerformed

    /**
     * @param args the command line arguments
     */
    // Reads in systemdatabase from all of the relevent .txt files 
    // and stores it.
    public static void main(String args[])throws Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        systemdatabase.readPatients();
        systemdatabase.readAdministrators();
        systemdatabase.readDoctors();
        systemdatabase.readSecretaries();
        
        systemdatabase.readPatientRequests();
        systemdatabase.readPatientRemovals();
        
        systemdatabase.readFeedback();
        systemdatabase.readMessages();
        
        systemdatabase.readNotifications();
        
        systemdatabase.readMedicines();
        systemdatabase.readAppointments();
        systemdatabase.readPrescriptions();
        
        systemdatabase.readAppointmentRequests();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateAccount;
    private javax.swing.JButton btnLogIn;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblSignUp;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtPassword;
    // End of variables declaration//GEN-END:variables
}
