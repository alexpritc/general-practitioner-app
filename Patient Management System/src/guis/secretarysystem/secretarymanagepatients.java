/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

// Package and imports.
package guis.secretarysystem;

import accounts.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import other.systemdatabase;

/**
 *
 * @author Alex Pritchard
 */
public class secretarymanagepatients extends javax.swing.JFrame {

    /**
     * Creates new form secretarymanagepatients
     */
    // Displays every patient.
    public secretarymanagepatients() {
        initComponents();
        
        String[] patientData = new String[systemdatabase.patients.size()];
        int i = 0;
        
        for (patient p : systemdatabase.patients){
            patientData[i] = p.getId() + ", " + p.getSurname();
            i++;
        }
        lstPatients.setListData(patientData);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        btnBack = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cmboxPatients = new javax.swing.JComboBox<>();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        lblID = new javax.swing.JLabel();
        txtGender = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstPatients = new javax.swing.JList<>();
        btnApproveRemove = new javax.swing.JButton();
        btnApproveNew = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        jFormattedTextField1.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnBack.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 21)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 36)); // NOI18N
        lblTitle.setText("Manage patient accounts");

        cmboxPatients.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 21)); // NOI18N
        cmboxPatients.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "View all patients", "View patient account requests", "View account removal requests" }));
        cmboxPatients.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmboxPatientsItemStateChanged(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 24)); // NOI18N
        lblName.setText("Full Name");

        txtName.setEditable(false);
        txtName.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 21)); // NOI18N
        txtName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtName.setMaximumSize(new java.awt.Dimension(40, 249));
        txtName.setMinimumSize(new java.awt.Dimension(40, 249));
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblAddress.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 24)); // NOI18N
        lblAddress.setText("Address");

        lblGender.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 24)); // NOI18N
        lblGender.setText("Gender");

        lblAge.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 24)); // NOI18N
        lblAge.setText("Age");

        txtID.setEditable(false);
        txtID.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 21)); // NOI18N
        txtID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        txtAge.setEditable(false);
        txtAge.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 21)); // NOI18N
        txtAge.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtAge.setMaximumSize(new java.awt.Dimension(40, 249));
        txtAge.setMinimumSize(new java.awt.Dimension(40, 249));
        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        lblID.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 24)); // NOI18N
        lblID.setText("ID");

        txtGender.setEditable(false);
        txtGender.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 21)); // NOI18N
        txtGender.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtGender.setMaximumSize(new java.awt.Dimension(40, 249));
        txtGender.setMinimumSize(new java.awt.Dimension(40, 249));
        txtGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGenderActionPerformed(evt);
            }
        });

        txtAddress.setEditable(false);
        txtAddress.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 21)); // NOI18N
        txtAddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtAddress.setMaximumSize(new java.awt.Dimension(40, 249));
        txtAddress.setMinimumSize(new java.awt.Dimension(40, 249));
        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        lstPatients.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 21)); // NOI18N
        lstPatients.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstPatients.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstPatientsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstPatients);

        btnApproveRemove.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 21)); // NOI18N
        btnApproveRemove.setText("Approve patient account removal");
        btnApproveRemove.setEnabled(false);
        btnApproveRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveRemoveActionPerformed(evt);
            }
        });

        btnApproveNew.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 21)); // NOI18N
        btnApproveNew.setText("Approve new patient request");
        btnApproveNew.setEnabled(false);
        btnApproveNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveNewActionPerformed(evt);
            }
        });

        btnRemove.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 21)); // NOI18N
        btnRemove.setText("Remove patient");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                    .addComponent(cmboxPatients, 0, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnApproveRemove, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
                    .addComponent(btnApproveNew, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblID, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAddress, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAge, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblGender, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtID, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtAddress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtAge, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtGender, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cmboxPatients, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddress))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAge))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGender))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnApproveNew, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnApproveRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 444, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(63, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 600, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(94, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(188, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Takes the user back to their homepage.
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new secretaryhome().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGenderActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    // Removes the selected patient from the system.
    private void btnApproveRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveRemoveActionPerformed
        // TODO add your handling code here:
        
        if (!lstPatients.isSelectionEmpty()){
            patient tempPatient = systemdatabase.patientRemovals.get(lstPatients.getSelectedIndex());
            
            for (patient p : systemdatabase.patientRemovals){
            if (tempPatient.getId().equals(p.getId())){
                systemdatabase.patientRemovals.remove(p);
                
                try {
                systemdatabase.savePatientRemovals();
                } catch (Exception ex) {
                Logger.getLogger(secretarymanagepatients.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            for (patient p2 : systemdatabase.patients){
            if (tempPatient.getId().equals(p2.getId())){
                systemdatabase.patients.remove(p2);
                
                try {
                systemdatabase.savePatients();
                } catch (Exception ex) {
                Logger.getLogger(secretarymanagepatients.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        } 
        } 
    }//GEN-LAST:event_btnApproveRemoveActionPerformed

    // Adds the selected patient account to the system.
    private void btnApproveNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveNewActionPerformed
        // TODO add your handling code here:
        
        if (!lstPatients.isSelectionEmpty()){
        patient tempPatient = systemdatabase.patientRequests.get(lstPatients.getSelectedIndex());
        
         int length = systemdatabase.patients.size();
         String id = systemdatabase.patients.get(length-1).getId();
            
           String[] newID = new String [2];
           newID = id.split("P", 2);

           int value = Integer.parseInt(newID[1]);
           value++;
            
           if (value < 10){
           tempPatient.setId("P000" + value);
           }
           else if (value < 100){
           tempPatient.setId("P00" + value);
           }
           else if (value < 1000){
           tempPatient.setId("P0" + value);
           }
           else{
           tempPatient.setId("P" + value);
           }

            
            systemdatabase.patients.add(tempPatient);
            
            systemdatabase.patientRequests.remove(systemdatabase.patientRequests.get(lstPatients.getSelectedIndex()));
            
        try {
            systemdatabase.savePatients();
        } catch (Exception ex) {
            Logger.getLogger(secretarymanagepatients.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        try {
            systemdatabase.savePatientRequests();
        } catch (Exception ex) {
            Logger.getLogger(secretarymanagepatients.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
            
    }//GEN-LAST:event_btnApproveNewActionPerformed

    // Removes the selected patient from the system.
    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here
        if (!lstPatients.isSelectionEmpty()){
        patient tempPatient = systemdatabase.patients.get(lstPatients.getSelectedIndex());
            
        for (patient p : systemdatabase.patients){
            if (tempPatient.getId().equals(p.getId())){
                systemdatabase.patients.remove(p);
                return;
            }
        }
           
        try {
            systemdatabase.savePatients();
        } catch (Exception ex) {
            Logger.getLogger(secretarymanagepatients.class.getName()).log(Level.SEVERE, null, ex);
        }
        } 
    }//GEN-LAST:event_btnRemoveActionPerformed

    // Allows the secretary to swtich between seeing all accounts,
    // account creation requests and account removal requests.
    private void cmboxPatientsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmboxPatientsItemStateChanged
        // TODO add your handling code here:
        lstPatients.setSelectedIndex(-1);
        btnApproveNew.setEnabled(false);
        btnApproveRemove.setEnabled(false);
        btnRemove.setEnabled(false);
        
        if (cmboxPatients.getSelectedIndex() == 0){
   
        if (!systemdatabase.patients.isEmpty()){
        String[] patientData = new String[systemdatabase.patients.size()];
        int i = 0;
        
        for (patient p : systemdatabase.patients){
            patientData[i] = p.getId() + ", " + p.getSurname();
            i++;
        }
        lstPatients.setListData(patientData);
        }
        else{
        String[] patientData = new String[1];
        patientData[0] = "No entries.";
        lstPatients.setListData(patientData);
        }
        
        }
        else if (cmboxPatients.getSelectedIndex() == 1){
            
            if (!systemdatabase.patientRequests.isEmpty()){
            String[] patientData = new String[systemdatabase.patientRequests.size()];
            int i = 0;
        
            for (patient p : systemdatabase.patientRequests){
            patientData[i] = p.getId() + ", " + p.getSurname();
            i++;
            }
            lstPatients.setListData(patientData);
            }
            else{
            String[] patientData = new String[1];
            patientData[0] = "No entries.";
            lstPatients.setListData(patientData);
            }
        }
        else if (cmboxPatients.getSelectedIndex() == 2){
            
            if (!systemdatabase.patientRemovals.isEmpty()){
            String[] patientData = new String[systemdatabase.patientRemovals.size()];
            int i = 0;
        
            for (patient p : systemdatabase.patientRemovals){
            patientData[i] = p.getId() + ", " + p.getSurname();
            i++;
        }
            lstPatients.setListData(patientData);
            }
            else{
            String[] patientData = new String[1];
            patientData[0] = "No entries.";
            lstPatients.setListData(patientData);
            }
            
        }
        
    }//GEN-LAST:event_cmboxPatientsItemStateChanged

    // Updates the on screen information to reflect that of the selected patient.
    private void lstPatientsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstPatientsValueChanged
        // TODO add your handling code here:
        int index = lstPatients.getSelectedIndex();
        
        if (lstPatients.isSelectionEmpty() || "No entries.".equals(lstPatients.
                                                        getSelectedValue())){
        txtID.setText("");
        txtName.setText("");
        txtAddress.setText("");
        txtAge.setText("");
        txtGender.setText("");
        
        btnApproveNew.setEnabled(false);
        btnApproveRemove.setEnabled(false);
        btnRemove.setEnabled(false);
        }
        else{
        if (cmboxPatients.getSelectedIndex() == 0){
            
        btnApproveNew.setEnabled(false);
        btnApproveRemove.setEnabled(false);
        btnRemove.setEnabled(true);
        
        txtID.setText(systemdatabase.patients.get(index).getId());
        txtName.setText(systemdatabase.patients.get(index).getName() 
                        + " " + systemdatabase.patients.get(index).getSurname());
        txtAddress.setText(systemdatabase.patients.get(index).getAddress());
        txtAge.setText(systemdatabase.patients.get(index).getAge());
        txtGender.setText(systemdatabase.patients.get(index).getGender());
        }
        else if (cmboxPatients.getSelectedIndex() == 1){
        btnApproveNew.setEnabled(true);
        btnApproveRemove.setEnabled(false);
        btnRemove.setEnabled(false);
        
        txtID.setText(systemdatabase.patientRequests.get(index).getId());
        txtName.setText(systemdatabase.patientRequests.get(index).getName() 
                        + " " + systemdatabase.patientRequests.get(index).getSurname());
        txtAddress.setText(systemdatabase.patientRequests.get(index).getAddress());
        txtAge.setText(systemdatabase.patientRequests.get(index).getAge());
        txtGender.setText(systemdatabase.patientRequests.get(index).getGender());
        }
        else if (cmboxPatients.getSelectedIndex() == 2){
        btnApproveNew.setEnabled(false);
        btnApproveRemove.setEnabled(true);
        btnRemove.setEnabled(false);
        
        txtID.setText(systemdatabase.patientRemovals.get(index).getId());
        txtName.setText(systemdatabase.patientRemovals.get(index).getName() 
                        + " " + systemdatabase.patientRemovals.get(index).getSurname());
        txtAddress.setText(systemdatabase.patientRemovals.get(index).getAddress());
        txtAge.setText(systemdatabase.patientRemovals.get(index).getAge());
        txtGender.setText(systemdatabase.patientRemovals.get(index).getGender());
        }
        }
    }//GEN-LAST:event_lstPatientsValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(secretarymanagepatients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(secretarymanagepatients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(secretarymanagepatients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(secretarymanagepatients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new secretarymanagepatients().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApproveNew;
    private javax.swing.JButton btnApproveRemove;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRemove;
    private javax.swing.JComboBox<String> cmboxPatients;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JList<String> lstPatients;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
